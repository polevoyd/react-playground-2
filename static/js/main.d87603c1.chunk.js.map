{"version":3,"sources":["SquareButton.js","index.js"],"names":["SquareButton","props","react_default","a","createElement","className","onClick","this","symbol","React","Component","CalcButtons","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tempValue","tempOperation","currentValue","button","tempSymbol","target","textContent","includes","setState","length","result","parseInt","toString","substr","_this2","map","element","index","src_SquareButton","e","clickHandler","key","ReactDOM","render","src_CalcButtons","document","getElementById"],"mappings":"uKAeeA,uLATJC,GACH,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAASC,KAAKN,MAAMK,SACnDJ,EAAAC,EAAAC,cAAA,UAAKG,KAAKN,MAAMO,gBALDC,IAAMC,YCG3BC,cAEF,SAAAA,EAAYV,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMN,KAEDiB,MAAQ,CACTC,UAAW,EACXC,cAAe,GACfC,aAAc,IANHT,4EAUNU,GAET,IAEMC,EAAaD,EAAOE,OAAOC,YAEjC,GAJoB,CAAC,IAAK,IAAK,IAAK,KAIpBC,SAASH,GAErBhB,KAAKoB,SAAS,CACVR,UAAWZ,KAAKW,MAAMG,aACtBD,cAAeG,EACfF,aAAc,UAGf,GAXU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAWlCK,SAASH,GAEL,MAAfA,GAAoD,MAA5BhB,KAAKW,MAAMG,aAEpCd,KAAKoB,SAAS,CACVN,aAAcE,IAEK,MAAfA,GAAoD,MAA5BhB,KAAKW,MAAMG,aAE3Cd,KAAKoB,SAAS,CACVN,aAAcE,IAGbhB,KAAKW,MAAMG,aAAaO,OAAS,GAElCrB,KAAKoB,SAAS,CACVN,aAAcd,KAAKW,MAAMG,aAAeE,SAKjD,GAAmB,MAAfA,GAEP,GAAKhB,KAAKW,MAAMG,cAAkBd,KAAKW,MAAMC,WAAeZ,KAAKW,MAAME,cAAgB,CAEnF,IAAIS,EACJ,OAAQtB,KAAKW,MAAME,eAEf,IAAK,IACLS,EAASC,SAASvB,KAAKW,MAAMC,WAAaW,SAASvB,KAAKW,MAAMG,cAC9D,MAEA,IAAK,IACLQ,EAASC,SAASvB,KAAKW,MAAMC,WAAaW,SAASvB,KAAKW,MAAMG,cAC9D,MAEA,IAAK,IACLQ,EAASC,SAASvB,KAAKW,MAAMC,WAAaW,SAASvB,KAAKW,MAAMG,cAC9D,MAEA,IAAK,IACLQ,EAASC,SAASvB,KAAKW,MAAMC,WAAaW,SAASvB,KAAKW,MAAMG,cAOlEQ,EAAUA,EAAOE,WAAWH,OAAS,EAAKC,EAAOE,WAAWC,OAAO,EAAG,GAAKH,EAAOE,WAClFxB,KAAKoB,SAAS,CACVN,aAAcQ,EACdT,cAAe,GACfD,UAAWU,UAKnBtB,KAAKoB,SAAS,CACVN,aAAc,sCAKjB,IAAAY,EAAA1B,KAEL,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeE,KAAKW,MAAMG,cACzCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAJF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,KAK1E6B,IAAK,SAACC,EAASC,GAAV,OAAqBlC,EAAAC,EAAAC,cAACiC,EAAD,CAAc/B,QAAS,SAAAgC,GAAC,OAAIL,EAAKM,aAAaD,IAAI9B,OAAQ2B,EAASK,IAAK,UAAYJ,eA/FlH3B,IAAMC,WAuGhC+B,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAAiBC,SAASC,eAAe","file":"static/js/main.d87603c1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './index.css';\n\nclass SquareButton extends React.Component {\n\n    render(props) {\n        return (\n            <div className=\"square-button\" onClick={this.props.onClick}>\n            <h3>{this.props.symbol}</h3>\n            </div>\n        );\n    }\n}\n\nexport default SquareButton;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport SquareButton from './SquareButton';\n\n\nclass CalcButtons extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tempValue: 0,\n            tempOperation: '',\n            currentValue: ''\n        };\n    }\n\n    clickHandler(button) {\n\n        const operations_ = ['*', '%', '-', '+'];\n        const numbers_ = ['1','2','3','4','5','6','7','8','9','0'];\n        const tempSymbol = button.target.textContent;\n\n        if (operations_.includes(tempSymbol)) {\n            \n            this.setState({\n                tempValue: this.state.currentValue,\n                tempOperation: tempSymbol,\n                currentValue: ''\n            });\n\n        } else if (numbers_.includes(tempSymbol)) {\n\n            if ((tempSymbol === '0') && (this.state.currentValue === '0')) {\n\n                this.setState({\n                    currentValue: tempSymbol\n                })\n            } else if ((tempSymbol !== '0') && (this.state.currentValue === '0')){\n\n                this.setState({\n                    currentValue: tempSymbol\n                })\n            } else {\n                if ((this.state.currentValue.length < 7)) {\n\n                    this.setState({\n                        currentValue: this.state.currentValue + tempSymbol\n                    });\n                }\n            }\n            \n        } else if (tempSymbol === '='){\n\n            if ((this.state.currentValue) && (this.state.tempValue) && (this.state.tempOperation)) {\n\n                let result;\n                switch (this.state.tempOperation) {\n\n                    case '+':\n                    result = parseInt(this.state.tempValue) + parseInt(this.state.currentValue);\n                    break;\n\n                    case '-':\n                    result = parseInt(this.state.tempValue) - parseInt(this.state.currentValue);\n                    break;\n\n                    case '*':\n                    result = parseInt(this.state.tempValue) * parseInt(this.state.currentValue);\n                    break;\n\n                    case '%':\n                    result = parseInt(this.state.tempValue) / parseInt(this.state.currentValue);\n                    break;\n                    \n                    default:\n                    break;\n                }\n\n                result = (result.toString().length > 7) ? result.toString().substr(0, 7) : result.toString();\n                this.setState({\n                    currentValue: result,\n                    tempOperation: '',\n                    tempValue: result\n                });\n            }\n        } else {\n\n            this.setState({\n                currentValue: ''      \n            });\n        }\n    }\n\n    render() {\n        const buttonsArray = ['*', '%', '+', '-', '1', '2', '3', 'C', '4', '5', '6', '=', '7', '8', '9','0'];\n        return (\n            <div className=\"calculator-board\">\n                <div className=\"input-field\">{this.state.currentValue}</div>\n                <div className=\"square-buttons\"> \n                {buttonsArray.map( (element, index) => (<SquareButton onClick={e => this.clickHandler(e)} symbol={element} key={'button_' + index} />))}\n                </div>\n            </div>\n        );\n    }\n}\n\n// rendering whole thing to a page\nReactDOM.render(<CalcButtons />, document.getElementById('root'));"],"sourceRoot":""}